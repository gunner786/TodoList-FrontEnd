{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/shared/models/task.model.ts","webpack:///./src/app/task-add/task-add.component.css","webpack:///./src/app/task-add/task-add.component.html","webpack:///./src/app/task-add/task-add.component.ts","webpack:///./src/app/task-edit/task-edit.component.css","webpack:///./src/app/task-edit/task-edit.component.html","webpack:///./src/app/task-edit/task-edit.component.ts","webpack:///./src/app/task-storage.service.ts","webpack:///./src/app/todo/todo.component.css","webpack:///./src/app/todo/todo.component.html","webpack:///./src/app/todo/todo.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {TodoComponent} from './todo/todo.component';\nimport {TaskAddComponent} from \"./task-add/task-add.component\";\nimport {TaskEditComponent} from \"./task-edit/task-edit.component\";\n\nconst routes: Routes = [\n  {\n    // contains the whole todo list\n    path: 'tasks',\n    component: TodoComponent\n  },\n  {\n    // display the form to add a new task\n    path: 'tasks/add',\n    component: TaskAddComponent,\n    data: {title: 'Add new task'}\n  },\n  {\n    // display the form to add a new task\n    path: 'tasks/:id/edit',\n    component: TaskEditComponent,\n    data: {title: 'Task edition'}\n  },\n  // Always go on /tasks path\n  { path: '',\n    redirectTo: '/tasks',\n    pathMatch: 'full'\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\nexport const routingComponents = [TodoComponent];\n","module.exports = \"h1 {\\n  color: #369;\\n  font-family: Arial, Helvetica, sans-serif;\\n  font-size: 250%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0VBQ1gseUNBQXlDO0VBQ3pDLGVBQWU7QUFDakIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImgxIHtcbiAgY29sb3I6ICMzNjk7XG4gIGZvbnQtZmFtaWx5OiBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDI1MCU7XG59XG4iXX0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Todo list</h1>\\n  <router-outlet>\\n  </router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'todo-list';\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport {AppComponent} from './app.component';\nimport {TodoComponent} from './todo/todo.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport { TaskEditComponent } from './task-edit/task-edit.component';\nimport { TaskAddComponent } from './task-add/task-add.component';\nimport {Routes, RouterModule} from '@angular/router';\n\nconst routes: Routes = [\n  {\n    // contains the whole todo list\n    path: 'tasks',\n    component: TodoComponent  \n  },\n  {\n    // display the form to add a new task\n    path: 'tasks/add',\n    component: TaskAddComponent,\n    data: {title: 'Add new task'}\n  },\n  {\n    // display the form to add a new task\n    path: 'tasks/:id/edit',\n    component: TaskEditComponent,\n    data: {title: 'Task edition'}\n  },\n  // Always go on /tasks path\n  { path: '',\n    redirectTo: '/tasks',\n    pathMatch: 'full'\n  },\n];\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoComponent,\n    TaskEditComponent,\n    TaskAddComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","export class Task {\n  taskName: string;\n  taskDescription: string;\n  id: number;\n\n  constructor(taskName, taskDescription, id) {\n    this.taskDescription = taskDescription;\n    this.taskName = taskName;\n    this.id = id;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rhc2stYWRkL3Rhc2stYWRkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h2>Create a new task</h2>\\n\\n<form>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"taskName\\\">Task Name</label>\\n    <input type=\\\"text\\\" id=\\\"taskName\\\" class=\\\"form-control\\\" [formControl]=\\\"taskName\\\">\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"taskDescription\\\">Task Description</label>\\n    <input type=\\\"text\\\" id=\\\"taskDescription\\\" class=\\\"form-control\\\" [formControl]=\\\"taskDescription\\\">\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <button (click)=\\\"createTask()\\\" class=\\\"btn btn-primary\\\">Create</button>\\n    <button class=\\\"btn btn-light\\\" [routerLink]=\\\"['/tasks']\\\">Back</button>\\n  </div>\\n</form>\\n\"","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {TaskStorageService} from \"../task-storage.service\";\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-task-add',\n  templateUrl: './task-add.component.html',\n  styleUrls: ['./task-add.component.css']\n})\nexport class TaskAddComponent {\n\n  taskName = new FormControl('');\n\n  taskDescription = new FormControl('');\n\n  constructor(private storage: TaskStorageService, \n  private router: Router, private route: ActivatedRoute) {\n  }\n\n  public createTask() {\n    if(this.taskName.value == \"\" || this.taskDescription.value == \"\") {\n      alert(\"Please enter task details\");\n      this.router.navigate(['tasks/add']);\n      return;\n\n    }\n    this.storage.add(this.taskName.value, this.taskDescription.value);\n    this.router.navigate(['tasks']);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rhc2stZWRpdC90YXNrLWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h2>Edit your task</h2>\\n\\n<form>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"taskName\\\">Title</label>\\n    <input type=\\\"text\\\" id=\\\"taskName\\\" class=\\\"form-control\\\" [formControl]=\\\"taskName\\\">\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"taskDescription\\\">Note</label>\\n    <input type=\\\"text\\\" id=\\\"taskDescription\\\" class=\\\"form-control\\\" [formControl]=\\\"taskDescription\\\">\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <button (click)=\\\"updateTask()\\\" class=\\\"btn btn-primary\\\">Update</button>\\n    <button class=\\\"btn btn-light\\\" [routerLink]=\\\"['/tasks']\\\">Cancel</button>\\n  </div>\\n</form>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {TaskStorageService} from \"../task-storage.service\";\nimport {Router, ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-task-edit',\n  templateUrl: './task-edit.component.html',\n  styleUrls: ['./task-edit.component.css']\n})\nexport class TaskEditComponent implements OnInit {\n  id: any;\n  taskName = new FormControl('');\n  taskDescription = new FormControl('');\n\n  constructor(private storage: TaskStorageService, private route: ActivatedRoute, private router: Router) {\n  }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      this.id = params.get('id')\n      this.storage.editTask(params.get('id')).subscribe(data => {\n        this.taskName.setValue(data.taskName);\n        this.taskDescription.setValue(data.taskDescription);\n      });\n     \n    });\n  }\n\n  updateTask() {\n    this.storage.update(this.id, this.taskName.value, this.taskDescription.value);\n    this.router.navigate(['/tasks']);\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {Task} from \"../app/shared/models/task.model\";\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { environment } from '../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskStorageService {\n  \n  initialized: boolean = false;\n\n  constructor(private httpClient: HttpClient, private router: Router) {}\n\n  public getTasks(): Observable<any> {\n    return this.httpClient.get(environment.getTodo);\n  }\n\n  public add(taskName: string, taskDescription: string) {\n    let task = new Task(taskName, taskDescription,'');\n     this.httpClient.post(environment.addTodo,task).subscribe(value => {\n       console.log(value); \n       });\n  }\n\n  public update(id: number,taskName: string, taskDescription: string) {\n      let task = new Task(taskName, taskDescription,id);\n       this.httpClient.post(environment.updateTodo,task).subscribe(value => {\n         console.log(value); \n         });\n  }\n\n  public delete(id: number) {\n    this.httpClient.post('http://localhost:8081/todos/v1/delete?id='+id,id).subscribe(value => {\n      });\n  }\n\n  public editTask(id: any): Observable<any> {\n    return this.httpClient.get('http://localhost:8081/todos/v1/edit?id='+id);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RvZG8vdG9kby5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<button class=\\\"btn btn-success\\\" [routerLink]=\\\"['/tasks/add']\\\">New task</button>\\n\\n<div *ngIf=\\\"taskList && taskList.length > 0; else noTasks\\\">\\n  <table class=\\\"table table-striped\\\">\\n    <thead>\\n    <tr>\\n      <th>#</th>\\n      <th>Task Name</th>\\n      <th>Task Description</th>\\n      <th>Task Last Updated</th>\\n      <th></th>\\n    </tr>\\n    </thead>\\n    <tbody *ngFor=\\\"let task of taskList\\\">\\n    <tr>\\n      <td>{{ task.id }}</td>\\n      <td>{{ task.taskName }}</td>\\n      <td>{{ task.taskDescription }}</td>\\n      <td>{{ task.lastUpdated }}</td>\\n      <td>\\n        <button class=\\\"btn btn-light\\\" (click)=\\\"delete(task.id)\\\"><i class=\\\"far fa-trash-alt\\\"></i></button>\\n        <button class=\\\"btn btn-light\\\" [routerLink]=\\\"['/tasks/', task.id, 'edit']\\\"><i class=\\\"far fa-edit\\\"></i></button>\\n      </td>\\n    </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {TaskStorageService} from \"../task-storage.service\";\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\nexport class TodoComponent implements OnInit {\n\n  taskList: any [];\n\n  constructor(private storage: TaskStorageService,\n    private router: Router ) {\n  }\n\n  ngOnInit() : void{\n    this.storage.getTasks().subscribe(data => {\n      this.taskList = data;\n    });\n  }\n\n  public delete(id: number): void {\n    this.storage.delete(id);\n    window.location.reload();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  getTodo: 'http://localhost:8081/todos/v1/getAll',\n  deleteTodo: 'http://localhost:8081/todos/v1/delete?id=',\n  addTodo: 'http://localhost:8081/todos/v1/save',\n  updateTodo: 'http://localhost:8081/todos/v1/update',\n  \n};\n\n\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}